[{"path":"https://wklimowicz.github.io/tidylfs/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 tidylfs authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/articles/adding-variables.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"Adding variables to compiled data","text":"tidylfs designed easily add variables: * Find relevant variables ONS LFS User guidance. * Add user_extra_mappings. * Pass argument lfs_compile. example, add marital status: add variable changes time, use pick_var. example, degree class DEGCLS7 2007 onwards, DEGCLS . code imports factor (retaining SPSS labels), calls new column DEGREE_CLASS.","code":"user_extra_mappings <- function(lfs_file_column_names) {    custom_variables <- tibble::tribble(     ~lfs_name, ~new_name, ~type,     \"MARSEX6\", \"SEX_AND_MARITAL_STATUS\", \"factor\"     )    return(custom_variables) }  lfs_compile(   \"your_lfs_rds_directory\",   extra_mappings = user_extra_mappings ) user_extra_mappings <- function(lfs_file_column_names) {    # This will pick DEGCLS7 if it exists in the quarterly file,   # if not then DEGCLS,   # otherwise it'll return NA which is handled gracefully.   degree_class <- pick_var(c(\"DEGCLS7\", \"DEGCLS\"), lfs_file_column_names)    custom_variables <- tibble::tribble(     ~lfs_name,       ~new_name,     ~type,     \"MARSEX6\", \"SEX_AND_MARITAL_STATUS\", \"factor\",     degree_class, \"DEGREE_CLASS\", \"factor\"     )    return(custom_variables) }  lfs_compile(\"your_lfs_rds_directory\", extra_mappings = user_extra_mappings)"},{"path":"https://wklimowicz.github.io/tidylfs/dev/articles/stats-replication.html","id":"salary","dir":"Articles","previous_headings":"","what":"Salary","title":"Replicating ONS publications","text":"ONS Publication. ONS Publication. ONS Publication. Currently accurate 2010 onwards.","code":"library(tidyverse)  earn04 <- lfs |>   filter(FTPTWK == \"Full-time\") |>   filter(     WEIGHT_INCOME > 0,     HOURPAY <= 100,     HOURPAY >= 0,     INECAC05 == \"Employee\"   ) |>   group_by(QUARTER) |>   summarize(     n = n(),     median_weekly_pay = matrixStats::weightedMedian(       GRSSWK,       w = WEIGHT_INCOME,       na.rm = TRUE     ),     median_hourly_pay = matrixStats::weightedMedian(       HOURPAY,       w = WEIGHT_INCOME,       na.rm = TRUE     ),     paidweight = sum(GRSSWK * WEIGHT_INCOME, na.rm = TRUE),     paidweight2 = sum(WEIGHT_INCOME, na.rm = TRUE),     paidweighthrly = sum(HOURPAY * WEIGHT_INCOME, na.rm = TRUE),     paidweighthrly2 = sum(WEIGHT_INCOME, na.rm = TRUE),     .groups = \"drop\"   ) |>   mutate(     mean_weekly_pay = paidweight / (paidweight2),     mean_hourly_pay = paidweighthrly / (paidweighthrly2)   ) |>   select(QUARTER, mean_weekly_pay, median_weekly_pay) earn06 <- lfs |>   filter(FTPTWK == \"Full-time\") |>   filter(!is.na(OCCUPATION_MAJOR)) |>   filter(     WEIGHT_INCOME > 0,     HOURPAY <= 100,     HOURPAY >= 0,     INECAC05 == \"Employee\"   ) |>   group_by(QUARTER, OCCUPATION_MAJOR) |>   summarize(     n = n(),     median_weekly_pay = matrixStats::weightedMedian(       GRSSWK,       w = WEIGHT_INCOME,       na.rm = TRUE     ),     median_hourly_pay = matrixStats::weightedMedian(       HOURPAY,       w = WEIGHT_INCOME,       na.rm = TRUE     ),     paidweight = sum(GRSSWK * WEIGHT_INCOME, na.rm = TRUE),     paidweight2 = sum(WEIGHT_INCOME, na.rm = TRUE),     paidweighthrly = sum(HOURPAY * WEIGHT_INCOME, na.rm = TRUE),     paidweighthrly2 = sum(WEIGHT_INCOME, na.rm = TRUE),     .groups = \"drop\"   ) |>   mutate(     mean_weekly_pay = paidweight / (paidweight2),     mean_hourly_pay = paidweighthrly / (paidweighthrly2)   ) |>   pivot_wider(     id_cols = QUARTER,     names_from = OCCUPATION_MAJOR,     values_from = mean_weekly_pay   ) earn07 <- lfs |>   filter(YEAR >= 2010) |>   filter(!is.na(INDUSTRY)) |>   mutate(GROUPED_INDUSTRY = case_when(     substr(INDUSTRY_MAJOR, 1, 1) == \"A\" ~ \"A\",     substr(INDUSTRY_MAJOR, 1, 1) %in% c(\"B\", \"D\", \"E\") ~ \"BDE\",     substr(INDUSTRY_MAJOR, 1, 1) == \"C\" ~ \"C\",     substr(INDUSTRY_MAJOR, 1, 1) == \"F\" ~ \"F\",     substr(INDUSTRY_MAJOR, 1, 1) == \"G\" ~ \"G\",     substr(INDUSTRY_MAJOR, 1, 1) == \"H\" ~ \"H\",     substr(INDUSTRY_MAJOR, 1, 1) == \"I\" ~ \"I\",     substr(INDUSTRY_MAJOR, 1, 1) == \"J\" ~ \"J\",     substr(INDUSTRY_MAJOR, 1, 1) %in% c(\"K\", \"L\") ~ \"KL\",     substr(INDUSTRY_MAJOR, 1, 1) == \"M\" ~ \"M\",     substr(INDUSTRY_MAJOR, 1, 1) == \"N\" ~ \"N\",     substr(INDUSTRY_MAJOR, 1, 1) == \"O\" ~ \"O\",     substr(INDUSTRY_MAJOR, 1, 1) == \"P\" ~ \"P\",     substr(INDUSTRY_MAJOR, 1, 1) == \"Q\" ~ \"Q\",     substr(INDUSTRY_MAJOR, 1, 1) %in% c(\"R\", \"S\", \"T\") ~ \"RST\"   )) |>   filter(!is.na(GROUPED_INDUSTRY)) |>   filter(FTPTWK == \"Full-time\") |>   filter(     WEIGHT_INCOME > 0,     HOURPAY <= 100,     HOURPAY >= 0,     INECAC05 == \"Employee\"   ) |>   group_by(QUARTER, GROUPED_INDUSTRY) |>   summarize(     n = n(),     median_weekly_pay = matrixStats::weightedMedian(       GRSSWK,       w = WEIGHT_INCOME,       na.rm = TRUE     ),     median_hourly_pay = matrixStats::weightedMedian(       HOURPAY,       w = WEIGHT_INCOME,       na.rm = TRUE     ),     paidweight = sum(GRSSWK * WEIGHT_INCOME, na.rm = TRUE),     paidweight2 = sum(WEIGHT_INCOME, na.rm = TRUE),     paidweighthrly = sum(HOURPAY * WEIGHT_INCOME, na.rm = TRUE),     paidweighthrly2 = sum(WEIGHT_INCOME, na.rm = TRUE),     .groups = \"drop\"   ) |>   mutate(     mean_weekly_pay = paidweight / (paidweight2),     mean_hourly_pay = paidweighthrly / (paidweighthrly2)   ) |>   select(QUARTER, GROUPED_INDUSTRY, mean_weekly_pay, median_weekly_pay) |>   tidyr::pivot_wider(     id_cols = QUARTER,     names_from = GROUPED_INDUSTRY,     values_from = \"mean_weekly_pay\"   )"},{"path":"https://wklimowicz.github.io/tidylfs/dev/articles/stats-replication.html","id":"earn04","dir":"Articles","previous_headings":"","what":"EARN04","title":"Replicating ONS publications","text":"ONS Publication.","code":"library(tidyverse)  earn04 <- lfs |>   filter(FTPTWK == \"Full-time\") |>   filter(     WEIGHT_INCOME > 0,     HOURPAY <= 100,     HOURPAY >= 0,     INECAC05 == \"Employee\"   ) |>   group_by(QUARTER) |>   summarize(     n = n(),     median_weekly_pay = matrixStats::weightedMedian(       GRSSWK,       w = WEIGHT_INCOME,       na.rm = TRUE     ),     median_hourly_pay = matrixStats::weightedMedian(       HOURPAY,       w = WEIGHT_INCOME,       na.rm = TRUE     ),     paidweight = sum(GRSSWK * WEIGHT_INCOME, na.rm = TRUE),     paidweight2 = sum(WEIGHT_INCOME, na.rm = TRUE),     paidweighthrly = sum(HOURPAY * WEIGHT_INCOME, na.rm = TRUE),     paidweighthrly2 = sum(WEIGHT_INCOME, na.rm = TRUE),     .groups = \"drop\"   ) |>   mutate(     mean_weekly_pay = paidweight / (paidweight2),     mean_hourly_pay = paidweighthrly / (paidweighthrly2)   ) |>   select(QUARTER, mean_weekly_pay, median_weekly_pay)"},{"path":"https://wklimowicz.github.io/tidylfs/dev/articles/stats-replication.html","id":"earn06","dir":"Articles","previous_headings":"","what":"EARN06","title":"Replicating ONS publications","text":"ONS Publication.","code":"earn06 <- lfs |>   filter(FTPTWK == \"Full-time\") |>   filter(!is.na(OCCUPATION_MAJOR)) |>   filter(     WEIGHT_INCOME > 0,     HOURPAY <= 100,     HOURPAY >= 0,     INECAC05 == \"Employee\"   ) |>   group_by(QUARTER, OCCUPATION_MAJOR) |>   summarize(     n = n(),     median_weekly_pay = matrixStats::weightedMedian(       GRSSWK,       w = WEIGHT_INCOME,       na.rm = TRUE     ),     median_hourly_pay = matrixStats::weightedMedian(       HOURPAY,       w = WEIGHT_INCOME,       na.rm = TRUE     ),     paidweight = sum(GRSSWK * WEIGHT_INCOME, na.rm = TRUE),     paidweight2 = sum(WEIGHT_INCOME, na.rm = TRUE),     paidweighthrly = sum(HOURPAY * WEIGHT_INCOME, na.rm = TRUE),     paidweighthrly2 = sum(WEIGHT_INCOME, na.rm = TRUE),     .groups = \"drop\"   ) |>   mutate(     mean_weekly_pay = paidweight / (paidweight2),     mean_hourly_pay = paidweighthrly / (paidweighthrly2)   ) |>   pivot_wider(     id_cols = QUARTER,     names_from = OCCUPATION_MAJOR,     values_from = mean_weekly_pay   )"},{"path":"https://wklimowicz.github.io/tidylfs/dev/articles/stats-replication.html","id":"earn07","dir":"Articles","previous_headings":"","what":"EARN07","title":"Replicating ONS publications","text":"ONS Publication. Currently accurate 2010 onwards.","code":"earn07 <- lfs |>   filter(YEAR >= 2010) |>   filter(!is.na(INDUSTRY)) |>   mutate(GROUPED_INDUSTRY = case_when(     substr(INDUSTRY_MAJOR, 1, 1) == \"A\" ~ \"A\",     substr(INDUSTRY_MAJOR, 1, 1) %in% c(\"B\", \"D\", \"E\") ~ \"BDE\",     substr(INDUSTRY_MAJOR, 1, 1) == \"C\" ~ \"C\",     substr(INDUSTRY_MAJOR, 1, 1) == \"F\" ~ \"F\",     substr(INDUSTRY_MAJOR, 1, 1) == \"G\" ~ \"G\",     substr(INDUSTRY_MAJOR, 1, 1) == \"H\" ~ \"H\",     substr(INDUSTRY_MAJOR, 1, 1) == \"I\" ~ \"I\",     substr(INDUSTRY_MAJOR, 1, 1) == \"J\" ~ \"J\",     substr(INDUSTRY_MAJOR, 1, 1) %in% c(\"K\", \"L\") ~ \"KL\",     substr(INDUSTRY_MAJOR, 1, 1) == \"M\" ~ \"M\",     substr(INDUSTRY_MAJOR, 1, 1) == \"N\" ~ \"N\",     substr(INDUSTRY_MAJOR, 1, 1) == \"O\" ~ \"O\",     substr(INDUSTRY_MAJOR, 1, 1) == \"P\" ~ \"P\",     substr(INDUSTRY_MAJOR, 1, 1) == \"Q\" ~ \"Q\",     substr(INDUSTRY_MAJOR, 1, 1) %in% c(\"R\", \"S\", \"T\") ~ \"RST\"   )) |>   filter(!is.na(GROUPED_INDUSTRY)) |>   filter(FTPTWK == \"Full-time\") |>   filter(     WEIGHT_INCOME > 0,     HOURPAY <= 100,     HOURPAY >= 0,     INECAC05 == \"Employee\"   ) |>   group_by(QUARTER, GROUPED_INDUSTRY) |>   summarize(     n = n(),     median_weekly_pay = matrixStats::weightedMedian(       GRSSWK,       w = WEIGHT_INCOME,       na.rm = TRUE     ),     median_hourly_pay = matrixStats::weightedMedian(       HOURPAY,       w = WEIGHT_INCOME,       na.rm = TRUE     ),     paidweight = sum(GRSSWK * WEIGHT_INCOME, na.rm = TRUE),     paidweight2 = sum(WEIGHT_INCOME, na.rm = TRUE),     paidweighthrly = sum(HOURPAY * WEIGHT_INCOME, na.rm = TRUE),     paidweighthrly2 = sum(WEIGHT_INCOME, na.rm = TRUE),     .groups = \"drop\"   ) |>   mutate(     mean_weekly_pay = paidweight / (paidweight2),     mean_hourly_pay = paidweighthrly / (paidweighthrly2)   ) |>   select(QUARTER, GROUPED_INDUSTRY, mean_weekly_pay, median_weekly_pay) |>   tidyr::pivot_wider(     id_cols = QUARTER,     names_from = GROUPED_INDUSTRY,     values_from = \"mean_weekly_pay\"   )"},{"path":"https://wklimowicz.github.io/tidylfs/dev/articles/stats-replication.html","id":"unemployment","dir":"Articles","previous_headings":"","what":"Unemployment","title":"Replicating ONS publications","text":"ONS Publication. Accurate 1995 onwards.","code":"unem01 <- lfs |>   filter(YEAR > 1995) |>   filter(     WEIGHT > 0,     !is.na(ILODEFR)   ) |>   group_by(QUARTER) |>   summarize(     n = n(),     employed = sum((ILODEFR == \"In employment\") * WEIGHT, na.rm = TRUE),     unemployed = sum((ILODEFR == \"ILO unemployed\") * WEIGHT, na.rm = TRUE),     inactive = sum((ILODEFR == \"Inactive\") * WEIGHT, na.rm = TRUE),     .groups = \"drop\"   ) |>   mutate(     unemployed_percentage = unemployed / (employed + unemployed),     employed_percentage = employed / (employed + unemployed + inactive),     inactive_percentage = inactive / (employed + unemployed + inactive),   ) |>   select(QUARTER, unemployed_percentage) |>   mutate(unemployed_percentage = unemployed_percentage * 100) |>   filter(!is.na(unemployed_percentage))"},{"path":"https://wklimowicz.github.io/tidylfs/dev/articles/stats-replication.html","id":"unem01-nsa","dir":"Articles","previous_headings":"","what":"UNEM01 NSA","title":"Replicating ONS publications","text":"ONS Publication. Accurate 1995 onwards.","code":"unem01 <- lfs |>   filter(YEAR > 1995) |>   filter(     WEIGHT > 0,     !is.na(ILODEFR)   ) |>   group_by(QUARTER) |>   summarize(     n = n(),     employed = sum((ILODEFR == \"In employment\") * WEIGHT, na.rm = TRUE),     unemployed = sum((ILODEFR == \"ILO unemployed\") * WEIGHT, na.rm = TRUE),     inactive = sum((ILODEFR == \"Inactive\") * WEIGHT, na.rm = TRUE),     .groups = \"drop\"   ) |>   mutate(     unemployed_percentage = unemployed / (employed + unemployed),     employed_percentage = employed / (employed + unemployed + inactive),     inactive_percentage = inactive / (employed + unemployed + inactive),   ) |>   select(QUARTER, unemployed_percentage) |>   mutate(unemployed_percentage = unemployed_percentage * 100) |>   filter(!is.na(unemployed_percentage))"},{"path":"https://wklimowicz.github.io/tidylfs/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Wojtek Klimowicz. Author, maintainer.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Klimowicz W (2025). tidylfs: Tools analysing ONS Labour Force Survey. R package version 0.1.1.9000, https://github.com/wklimowicz/tidylfs.","code":"@Manual{,   title = {tidylfs: Tools for analysing the ONS Labour Force Survey},   author = {Wojtek Klimowicz},   year = {2025},   note = {R package version 0.1.1.9000},   url = {https://github.com/wklimowicz/tidylfs}, }"},{"path":[]},{"path":"https://wklimowicz.github.io/tidylfs/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for analysing the ONS Labour Force Survey","text":"can install development version tidylfs GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"wklimowicz/tidylfs\")"},{"path":"https://wklimowicz.github.io/tidylfs/dev/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"Tools for analysing the ONS Labour Force Survey","text":"Copy LFS .sav files directory (example lfs_data_folder). look like : can run: view variable mapping use variable_mapping(): Code reproduce official ONS publications vignette(\"stats-replication\"). information ONS variables, see LFS Guidance. core set variables included default. See R/mappings.R complete set. add variables see vignette(\"adding-variables\").","code":". └── lfs_data_folder/     ├── 1992 Q1.sav     ├── 1992 Q2.sav     ├── ...     └── 2020 Q2.sav library(tidylfs)  # Converts `.sav` files to `.Rds` files, to save # space and for quicker loading lfs_convert(   directory = \"lfs_data_folder/\",   output_directory = \"lfs_rds_folder/\" )  # Compiles into one file. lfs <- lfs_compile(directory = \"lfs_rds_folder/\") variable_mapping(lfs)"},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/aps_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load APS Data — aps_load","title":"Load APS Data — aps_load","text":"function deprecated removed future version package. recommended explicitly save compiled data persist .","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/aps_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load APS Data — aps_load","text":"","code":"aps_load(data.table = TRUE)"},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/aps_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load APS Data — aps_load","text":"data.table Import data.table?","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_compile.html","id":null,"dir":"Reference","previous_headings":"","what":"Compile to single data.frame — lfs_compile","title":"Compile to single data.frame — lfs_compile","text":"Compiles seperate fst files one, picking relevant columns","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_compile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compile to single data.frame — lfs_compile","text":"","code":"lfs_compile(   directory,   dataset = c(\"lfs\", \"aps\"),   years = NULL,   extra_mappings = NULL,   aps = lifecycle::deprecated(),   save_variables_report = lifecycle::deprecated(),   save_to_folder = lifecycle::deprecated() )"},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_compile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compile to single data.frame — lfs_compile","text":"directory Path directory LFS files dataset Either \"lfs\" \"aps\". \"lfs\" expects files named like \"2004 Q1.sav\" \"2004 Q2.sav\", \"aps\" expects files named like \"APS 2004.sav\" \"APS 2005.sav\". years Either NULL (years) vector years filter . extra_mappings Either NULL (use default) function takes vector column names returns data frame lfs_name, new_name, type. See vignette(\"Adding_Variables\", package = \"tidylfs\") aps Deprecated. Use dataset = \"aps\" instead. save_variables_report Deprecated.  Use variable_mapping(lfs) instead. save_to_folder Deprecated. Use lfs <- lfs_compile(..), save manually folder.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_compile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compile to single data.frame — lfs_compile","text":"data.table stacked LFS dataset. Access variable mapping variable_mapping(lfs).","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_convert.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert files to Rds for faster compiling in future — lfs_convert","title":"Convert files to Rds for faster compiling in future — lfs_convert","text":"Converts directory .sav files new folder .Rds files","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_convert.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert files to Rds for faster compiling in future — lfs_convert","text":"","code":"lfs_convert(   directory,   output_directory,   filter_files = NULL,   incremental = FALSE )"},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_convert.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert files to Rds for faster compiling in future — lfs_convert","text":"directory Directory raw LFS files output_directory Target directory save Rds files filter_files Limit certain files, using named vector incremental convert files exist output directory","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_convert.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert files to Rds for faster compiling in future — lfs_convert","text":"List output","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_convert.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert files to Rds for faster compiling in future — lfs_convert","text":"Note: importing labelled haven required import haven tests run - otherwise use haven labelled format.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_load.html","id":null,"dir":"Reference","previous_headings":"","what":"Load LFS Data — lfs_load","title":"Load LFS Data — lfs_load","text":"function deprecated removed future version package. recommended explicitly save compiled data persist .","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_load.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load LFS Data — lfs_load","text":"","code":"lfs_load(data.table = TRUE)"},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_load.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load LFS Data — lfs_load","text":"data.table Import data.table?","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_load.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load LFS Data — lfs_load","text":"tibble lfs data","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_hours.html","id":null,"dir":"Reference","previous_headings":"","what":"Group by and Summarise for hours worked — lfs_summarise_hours","title":"Group by and Summarise for hours worked — lfs_summarise_hours","text":"function deprecated. code moved vignette used explicitly analysis. Refer package documentation detailed usage.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_hours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group by and Summarise for hours worked — lfs_summarise_hours","text":"","code":"lfs_summarise_hours(lfs, ...)"},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_hours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group by and Summarise for hours worked — lfs_summarise_hours","text":"lfs LFS Dataset ... Variables group ","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_hours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group by and Summarise for hours worked — lfs_summarise_hours","text":"Tibble outputs","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_salary.html","id":null,"dir":"Reference","previous_headings":"","what":"Group by and Summarise into salary ONS Salary — lfs_summarise_salary","title":"Group by and Summarise into salary ONS Salary — lfs_summarise_salary","text":"function deprecated. code moved vignette used explicitly analysis. Refer package documentation detailed usage.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_salary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group by and Summarise into salary ONS Salary — lfs_summarise_salary","text":"","code":"lfs_summarise_salary(lfs, ...)"},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_salary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group by and Summarise into salary ONS Salary — lfs_summarise_salary","text":"lfs LFS Dataset ... Variables group ","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_salary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group by and Summarise into salary ONS Salary — lfs_summarise_salary","text":"Tibble data.table salary data","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_unemployment.html","id":null,"dir":"Reference","previous_headings":"","what":"Group by and Summarise for ONS unemployment — lfs_summarise_unemployment","title":"Group by and Summarise for ONS unemployment — lfs_summarise_unemployment","text":"function deprecated. code moved vignette used explicitly analysis. Refer package documentation detailed usage.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_unemployment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group by and Summarise for ONS unemployment — lfs_summarise_unemployment","text":"","code":"lfs_summarise_unemployment(lfs, ...)"},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_unemployment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group by and Summarise for ONS unemployment — lfs_summarise_unemployment","text":"lfs LFS Dataset ... Variables group ","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_unemployment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group by and Summarise for ONS unemployment — lfs_summarise_unemployment","text":"Tibble data.table unemployment data","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_union.html","id":null,"dir":"Reference","previous_headings":"","what":"Group by and Summarise for unionisation rates — lfs_summarise_union","title":"Group by and Summarise for unionisation rates — lfs_summarise_union","text":"function deprecated. code moved vignette used explicitly analysis. Refer package documentation detailed usage.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_union.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Group by and Summarise for unionisation rates — lfs_summarise_union","text":"","code":"lfs_summarise_union(lfs, ...)"},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_union.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Group by and Summarise for unionisation rates — lfs_summarise_union","text":"lfs LFS Dataset ... Variables group ","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_summarise_union.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Group by and Summarise for unionisation rates — lfs_summarise_union","text":"Tibble outputs","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_tidy_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Selects and renames columns from LFS File — lfs_tidy_file","title":"Selects and renames columns from LFS File — lfs_tidy_file","text":"Checks variables present picks order priority eg. PWT20 > PWT18 etc. Renames can binded one dataset","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_tidy_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selects and renames columns from LFS File — lfs_tidy_file","text":"","code":"lfs_tidy_file(file, total_files, file_format, extra_mappings = NULL)"},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_tidy_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selects and renames columns from LFS File — lfs_tidy_file","text":"file Index file total_files Vector file names - helper function cli file_format File extension: sav csv rds extra_mappings Either NULL (use default) R script lfs_extra_mappings function","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_tidy_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Selects and renames columns from LFS File — lfs_tidy_file","text":"List output","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/lfs_tidy_file.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Selects and renames columns from LFS File — lfs_tidy_file","text":"automatically save compiled file directory ready loaded lfs_load(), set DATA_DIRECTORY environment variable point folder.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/pick_var.html","id":null,"dir":"Reference","previous_headings":"","what":"Picks column names in order of appearance — pick_var","title":"Picks column names in order of appearance — pick_var","text":"column names change time, picks first one appears list order appearance. appear, returns character NA.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/pick_var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Picks column names in order of appearance — pick_var","text":"","code":"pick_var(vector_of_names, column_names)"},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/pick_var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Picks column names in order of appearance — pick_var","text":"vector_of_names character vector column names column_names vector columns lfs","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/pick_var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Picks column names in order of appearance — pick_var","text":"First name appears cols","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/tidylfs-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tidylfs: Tools for analysing the ONS Labour Force Survey — tidylfs-package","title":"tidylfs: Tools for analysing the ONS Labour Force Survey — tidylfs-package","text":"Tools compiling multiple waves ONS Labour Force Survey one tidy data frame.","code":""},{"path":[]},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/tidylfs-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tidylfs: Tools for analysing the ONS Labour Force Survey — tidylfs-package","text":"Maintainer: Wojtek Klimowicz wojtekklimowicz96@gmail.com","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/variable_mapping.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve variable mapping for LFS/APS compilation — variable_mapping","title":"Retrieve variable mapping for LFS/APS compilation — variable_mapping","text":"Retrieve variable mapping LFS/APS compilation","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/variable_mapping.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve variable mapping for LFS/APS compilation — variable_mapping","text":"","code":"variable_mapping(lfs)"},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/variable_mapping.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve variable mapping for LFS/APS compilation — variable_mapping","text":"lfs data.frame containing LFS/APS data.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/variable_mapping.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve variable mapping for LFS/APS compilation — variable_mapping","text":"data.frame variable mapping.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/reference/variable_mapping.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve variable mapping for LFS/APS compilation — variable_mapping","text":"","code":"if (FALSE) { # \\dontrun{ lfs <- lfs_compile(\"lfs_data/\") variable_mapping(lfs) } # }"},{"path":[]},{"path":"https://wklimowicz.github.io/tidylfs/dev/news/index.html","id":"tidylfs-011","dir":"Changelog","previous_headings":"","what":"tidylfs 0.1.1","title":"tidylfs 0.1.1","text":"ons_time_series removed.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/news/index.html","id":"tidylfs-010","dir":"Changelog","previous_headings":"","what":"tidylfs 0.1.0","title":"tidylfs 0.1.0","text":"save_variables_report deprecated. lfs_compile() attaches variable_mapping attribute. Remove argument use variable_mapping(lfs) view mapping. lfs_load(), aps_load(), lfs_compile(save_to_folder) deprecated favour explicitly writing data compilation. aps argument lfs_compile() deprecated. Use dataset = \"aps\" instead. lfs_summary_* functions deprecated. code replicating ONS publications vignettes, copied explicitly used analysis.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/news/index.html","id":"tidylfs-003","dir":"Changelog","previous_headings":"","what":"tidylfs 0.0.3","title":"tidylfs 0.0.3","text":"Data now saved default compilation, since updating package purges package directory. Setting environment variable DATA_DIRECTORY point folder save dataset compilation, lfs_load() aps_load() still work.","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/news/index.html","id":"tidylfs-002","dir":"Changelog","previous_headings":"","what":"tidylfs 0.0.2","title":"tidylfs 0.0.2","text":"Changed final lfs_data fst, option load data.table object. Added data.table methods summary functions","code":""},{"path":"https://wklimowicz.github.io/tidylfs/dev/news/index.html","id":"tidylfs-001","dir":"Changelog","previous_headings":"","what":"tidylfs 0.0.1","title":"tidylfs 0.0.1","text":"Initial release","code":""}]
